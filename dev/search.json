[{"path":"https://mlr3oml.mlr-org.com/dev/LICENSE.html","id":"gnu-lesser-general-public-license","dir":"","previous_headings":"","what":"GNU LESSER GENERAL PUBLIC LICENSE","title":"NA","text":"Version 2.1, February 1999","code":"Copyright (C) 1991, 1999 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA  Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.  [This is the first released version of the Lesser GPL.  It also counts  as the successor of the GNU Library Public License, version 2, hence  the version number 2.1.]"},{"path":"https://mlr3oml.mlr-org.com/dev/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"NA","text":"licenses software designed take away freedom share change . contrast, GNU General Public Licenses intended guarantee freedom share change free software–make sure software free users. license, Lesser General Public License, applies specially designated software packages–typically libraries–Free Software Foundation authors decide use . can use , suggest first think carefully whether license ordinary General Public License better strategy use particular case, based explanations . speak free software, referring freedom use, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish); receive source code can get want ; can change software use pieces new free programs; informed can things. protect rights, need make restrictions forbid distributors deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies library modify . example, distribute copies library, whether gratis fee, must give recipients rights gave . must make sure , , receive can get source code. link code library, must provide complete object files recipients, can relink library making changes library recompiling . must show terms know rights. protect rights two-step method: (1) copyright library, (2) offer license, gives legal permission copy, distribute /modify library. protect distributor, want make clear warranty free library. Also, library modified someone else passed , recipients know original version, original author’s reputation affected problems might introduced others. Finally, software patents pose constant threat existence free program. wish make sure company effectively restrict users free program obtaining restrictive license patent holder. Therefore, insist patent license obtained version library must consistent full freedom use specified license. GNU software, including libraries, covered ordinary GNU General Public License. license, GNU Lesser General Public License, applies certain designated libraries, quite different ordinary General Public License. use license certain libraries order permit linking libraries non-free programs. program linked library, whether statically using shared library, combination two legally speaking combined work, derivative original library. ordinary General Public License therefore permits linking entire combination fits criteria freedom. Lesser General Public License permits lax criteria linking code library. call license “Lesser” General Public License Less protect user’s freedom ordinary General Public License. also provides free software developers Less advantage competing non-free programs. disadvantages reason use ordinary General Public License many libraries. However, Lesser license provides advantages certain special circumstances. example, rare occasions, may special need encourage widest possible use certain library, becomes de-facto standard. achieve , non-free programs must allowed use library. frequent case free library job widely used non-free libraries. case, little gain limiting free library free software , use Lesser General Public License. cases, permission use particular library non-free programs enables greater number people use large body free software. example, permission use GNU C Library non-free programs enables many people use whole GNU operating system, well variant, GNU/Linux operating system. Although Lesser General Public License Less protective users’ freedom, ensure user program linked Library freedom wherewithal run program using modified version Library. precise terms conditions copying, distribution modification follow. Pay close attention difference “work based library” “work uses library”. former contains code derived library, whereas latter must combined library order run.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"NA","text":"0. License Agreement applies software library program contains notice placed copyright holder authorized party saying may distributed terms Lesser General Public License (also called “License”). licensee addressed “”. “library” means collection software functions /data prepared conveniently linked application programs (use functions data) form executables. “Library”, , refers software library work distributed terms. “work based Library” means either Library derivative work copyright law: say, work containing Library portion , either verbatim modifications /translated straightforwardly another language. (Hereinafter, translation included without limitation term “modification”.) “Source code” work means preferred form work making modifications . library, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation library. Activities copying, distribution modification covered License; outside scope. act running program using Library restricted, output program covered contents constitute work based Library (independent use Library tool writing ). Whether true depends Library program uses Library . 1. may copy distribute verbatim copies Library’s complete source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; distribute copy License along Library. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Library portion , thus forming work based Library, copy distribute modifications work terms Section 1 , provided also meet conditions: ) modified work must software library. b) must cause files modified carry prominent notices stating changed files date change. c) must cause whole work licensed charge third parties terms License. d) facility modified Library refers function table data supplied application program uses facility, argument passed facility invoked, must make good faith effort ensure , event application supply function table, facility still operates, performs whatever part purpose remains meaningful. (example, function library compute square roots purpose entirely well-defined independent application. Therefore, Subsection 2d requires application-supplied function table used function must optional: application supply , square root function must still compute square roots.) requirements apply modified work whole. identifiable sections work derived Library, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Library, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Library. addition, mere aggregation another work based Library Library (work based Library) volume storage distribution medium bring work scope License. 3. may opt apply terms ordinary GNU General Public License instead License given copy Library. , must alter notices refer License, refer ordinary GNU General Public License, version 2, instead License. (newer version version 2 ordinary GNU General Public License appeared, can specify version instead wish.) make change notices. change made given copy, irreversible copy, ordinary GNU General Public License applies subsequent copies derivative works made copy. option useful wish copy part code Library program library. 4. may copy distribute Library (portion derivative , Section 2) object code executable form terms Sections 1 2 provided accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange. distribution object code made offering access copy designated place, offering equivalent access copy source code place satisfies requirement distribute source code, even though third parties compelled copy source along object code. 5. program contains derivative portion Library, designed work Library compiled linked , called “work uses Library”. work, isolation, derivative work Library, therefore falls outside scope License. However, linking “work uses Library” Library creates executable derivative Library (contains portions Library), rather “work uses library”. executable therefore covered License. Section 6 states terms distribution executables. “work uses Library” uses material header file part Library, object code work may derivative work Library even though source code . Whether true especially significant work can linked without Library, work library. threshold true precisely defined law. object file uses numerical parameters, data structure layouts accessors, small macros small inline functions (ten lines less length), use object file unrestricted, regardless whether legally derivative work. (Executables containing object code plus portions Library still fall Section 6.) Otherwise, work derivative Library, may distribute object code work terms Section 6. executables containing work also fall Section 6, whether linked directly Library . 6. exception Sections , may also combine link “work uses Library” Library produce work containing portions Library, distribute work terms choice, provided terms permit modification work customer’s use reverse engineering debugging modifications. must give prominent notice copy work Library used Library use covered License. must supply copy License. work execution displays copyright notices, must include copyright notice Library among , well reference directing user copy License. Also, must one things: ) Accompany work complete corresponding machine-readable source code Library including whatever changes used work (must distributed Sections 1 2 ); , work executable linked Library, complete machine-readable “work uses Library”, object code /source code, user can modify Library relink produce modified executable containing modified Library. (understood user changes contents definitions files Library necessarily able recompile application use modified definitions.) b) Use suitable shared library mechanism linking Library. suitable mechanism one (1) uses run time copy library already present user’s computer system, rather copying library functions executable, (2) operate properly modified version library, user installs one, long modified version interface-compatible version work made . c) Accompany work written offer, valid least three years, give user materials specified Subsection 6a, , charge cost performing distribution. d) distribution work made offering access copy designated place, offer equivalent access copy specified materials place. e) Verify user already received copy materials already sent user copy. executable, required form “work uses Library” must include data utility programs needed reproducing executable . However, special exception, materials distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. may happen requirement contradicts license restrictions proprietary libraries normally accompany operating system. contradiction means use Library together executable distribute. 7. may place library facilities work based Library side--side single library together library facilities covered License, distribute combined library, provided separate distribution work based Library library facilities otherwise permitted, provided two things: ) Accompany combined library copy work based Library, uncombined library facilities. must distributed terms Sections . b) Give prominent notice combined library fact part work based Library, explaining find accompanying uncombined form work. 8. may copy, modify, sublicense, link , distribute Library except expressly provided License. attempt otherwise copy, modify, sublicense, link , distribute Library void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 9. required accept License, since signed . However, nothing else grants permission modify distribute Library derivative works. actions prohibited law accept License. Therefore, modifying distributing Library (work based Library), indicate acceptance License , terms conditions copying, distributing modifying Library works based . 10. time redistribute Library (work based Library), recipient automatically receives license original licensor copy, distribute, link modify Library subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 11. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Library . example, patent license permit royalty-free redistribution Library receive copies directly indirectly , way satisfy License refrain entirely distribution Library. portion section held invalid unenforceable particular circumstance, balance section intended apply, section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 12. distribution /use Library restricted certain countries either patents copyrighted interfaces, original copyright holder places Library License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 13. Free Software Foundation may publish revised /new versions Lesser General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Library specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Library specify license version number, may choose version ever published Free Software Foundation. 14. wish incorporate parts Library free programs whose distribution conditions incompatible , write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally. WARRANTY 15. LIBRARY LICENSED FREE CHARGE, WARRANTY LIBRARY, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE LIBRARY “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE LIBRARY . LIBRARY PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 16. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE LIBRARY PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE LIBRARY (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE LIBRARY OPERATE SOFTWARE), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":[]},{"path":"https://mlr3oml.mlr-org.com/dev/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-libraries","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Libraries","title":"NA","text":"develop new library, want greatest possible use public, recommend making free software everyone can redistribute change. can permitting redistribution terms (, alternatively, terms ordinary General Public License). apply terms, attach following notices library. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. also get employer (work programmer) school, , sign “copyright disclaimer” library, necessary. sample; alter names: ’s !","code":"one line to give the library's name and an idea of what it does. Copyright (C) year  name of author  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA Yoyodyne, Inc., hereby disclaims all copyright interest in the library `Frob' (a library for tweaking knobs) written by James Random Hacker.  signature of Ty Coon, 1 April 1990 Ty Coon, President of Vice"},{"path":"https://mlr3oml.mlr-org.com/dev/TODO.html","id":null,"dir":"","previous_headings":"","what":"Michel Codereview:","title":"Michel Codereview:","text":"https://github.com/openml/OpenML/issues/1145 Alle Tests laufen + fehlende Tests hinzufügen - row_ids checken –> primary_key muss auf die rowidentifier column gesetzt werden falls die existiert - Schauen dass das mit den parametern und den appendeten ids wirklich klappt –> einem konkreten Beispiel testen - Das mit den row_ids kann man auch manuell testen Den ganzen Code selbst Ruhe Korrektur lesen + Doku korrigieren vignette erstellen sowas Richtung: wir laden ne run study runter, Checken dass alle Funktionen / Objekte die definiert sind auch hergenommen werden. Upload checken (inklusive evaluations) - oml_ids –> upload (wo wird das eigentlich herngnomm) hash integrieren um checken ob das verändert wird, das wird von der S3 methode get_oml_id erledigt - Aufpassen mit den Versionen beim upload wenn man einen Flow vom rds rekonstruiert: ausprobieren passiert wenn man 2 x den gleichen Flow mit unterschiedlicher binary hochlädt. –> Evtl neue Instanz aus der Klasse erstellen und checken ob die gleich sind bevor man uploaded - Wird nur die Klasse oder die Instanz hochgeladen - Das mit dem hashing fertig machen Wenn der Test Server läuft: testen fügen unser eigenes resultat hinzu und vergleichen das ganze mal Bei den Tests einen eigenen Cache Ordner erstellen und wieder löschen nach den Tests Loakle Tests: kein caching Github actoins tests: caching delete invalid mlr3 Objects OpenML caching description download default args desc = download_run_desc Ich finde nicht, dass die ignore_attribute und die row_identifier Spalte gelöscht werden sollen –> make optional argument “discard” Check predictions correct predict set uploaded Parquet: sparse parquet Für Michel: Maybe change $data active field method allow obtaining whole dataset immediately remove ignore_attribute row_id_attribute (ask Michel) FIXME: positive class? <– heißt das Checke das alles mit den Namespaces passt (suggest vs import) (der download_data). Sie werden ja entsprechend behandelt wenn as_data_backend gecalled wird. hier noch passieren muss: Die primary_key Spalte muss entsprechend gesetzt werden und bei as_task muss dann as_data_backend gecalled werden und die ignore_attribute features aus den features entfernt werden. Das mit den ignore_attributes ist wichtig, weil die resampling splits darauf basierend berechnet werden (besten checke ich das nochmal selber mit einem Beispiel) Aufpassen mit den row identifie Später: - [ ] Support parquet (upload download) Support parquet (upload download) - [ ] Add format_list methods (data.table) OMLRun undso wenn das endlich mal data.table kommt - [ ] http test","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/TODO.html","id":"todo-file-for-mlr3oml","dir":"","previous_headings":"","what":"TODO File for mlr3oml","title":"Michel Codereview:","text":"tasks: - [ ] Verify existing functions - [ ] Better console output downloading collections. - [ ] Add tags flows (mlr3), must done seperate API Call - [ ] Extend survival tasks maybe also cluster","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michel Lang. Maintainer, author. Sebastian Fischer. Author.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lang M, Fischer S (2022). mlr3oml: Connector 'mlr3' 'OpenML'. https://mlr3oml.mlr-org.com, https://github.com/mlr-org/mlr3oml.","code":"@Manual{,   title = {mlr3oml: Connector Between 'mlr3' and 'OpenML'},   author = {Michel Lang and Sebastian Fischer},   year = {2022},   note = {https://mlr3oml.mlr-org.com, https://github.com/mlr-org/mlr3oml}, }"},{"path":"https://mlr3oml.mlr-org.com/dev/index.html","id":"mlr3oml","dir":"","previous_headings":"","what":"Connector Between mlr3 and OpenML","title":"Connector Between mlr3 and OpenML","text":"mlr3oml allows create mlr3 tasks directly OpenML data sets. Furthermore, can also obtain data resampling given OpenML task. Caching can enabled setting option \"mlr3oml.cache\". Uploading OpenML currently supported, use OpenML package package .","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/index.html","id":"short-demo","dir":"","previous_headings":"","what":"Short Demo","title":"Connector Between mlr3 and OpenML","text":"","code":"library(\"mlr3\") library(\"mlr3oml\")  # be less verbose lgr::get_logger(\"mlr3oml\")$set_threshold(\"warn\")  # retrieve data set as task from OML tsk(\"oml\", data_id = 31) ## <TaskClassif:credit-g> (1000 x 21) ## * Target: class ## * Properties: twoclass ## * Features (20): ##   - fct (13): checking_status, credit_history, employment, ##     foreign_worker, housing, job, other_parties, other_payment_plans, ##     own_telephone, personal_status, property_magnitude, purpose, ##     savings_status ##   - int (7): age, credit_amount, duration, existing_credits, ##     installment_commitment, num_dependents, residence_since # retrieve a regular task from OML tsk(\"oml\", task_id = 59) ## <TaskClassif:Task 59: iris (Supervised Classification)> (150 x 5) ## * Target: class ## * Properties: multiclass ## * Features (4): ##   - dbl (4): petallength, petalwidth, sepallength, sepalwidth # retrieve resampling from OML rsmp(\"oml\", task_id = 59) ## <ResamplingCustom> with 10 iterations ## * Instantiated: TRUE ## * Parameters: list() # R6 class for data sets oml_data = OMLData$new(61) oml_data$name ## [1] \"iris\" oml_data$nrow ## [1] 150 oml_data$ncol ## [1] 5 oml_data$data ##      sepallength sepalwidth petallength petalwidth          class ##   1:         5.1        3.5         1.4        0.2    Iris-setosa ##   2:         4.9        3.0         1.4        0.2    Iris-setosa ##   3:         4.7        3.2         1.3        0.2    Iris-setosa ##   4:         4.6        3.1         1.5        0.2    Iris-setosa ##   5:         5.0        3.6         1.4        0.2    Iris-setosa ##  --- ## 146:         6.7        3.0         5.2        2.3 Iris-virginica ## 147:         6.3        2.5         5.0        1.9 Iris-virginica ## 148:         6.5        3.0         5.2        2.0 Iris-virginica ## 149:         6.2        3.4         5.4        2.3 Iris-virginica ## 150:         5.9        3.0         5.1        1.8 Iris-virginica # R6 class for tasks oml_task = OMLTask$new(31) oml_task$name ## [1] \"Task 31: credit-g (Supervised Classification)\" oml_task$nrow ## [1] 1000 oml_task$ncol ## [1] 21 oml_task$task ## <TaskClassif:Task 31: credit-g (Supervised Classification)> (1000 x 21) ## * Target: class ## * Properties: twoclass ## * Features (20): ##   - fct (13): checking_status, credit_history, employment, ##     foreign_worker, housing, job, other_parties, other_payment_plans, ##     own_telephone, personal_status, property_magnitude, purpose, ##     savings_status ##   - int (7): age, credit_amount, duration, existing_credits, ##     installment_commitment, num_dependents, residence_since oml_task$resampling ## <ResamplingCustom> with 10 iterations ## * Instantiated: TRUE ## * Parameters: list() # list oml data sets with 5 features and 50 - 200 instances tab = list_oml_data(number_features = 5, number_instances = c(50, 200)) head(tab[, .(data_id, name)]) ##    data_id               name ## 1:      61               iris ## 2:     199           fruitfly ## 3:     214           baskball ## 4:     329         hayes-roth ## 5:     346               aids ## 6:     668 witmer_census_1980 # list first 10 oml tasks tab = list_oml_tasks(limit = 10) tab[, .(task_id, data_id, name)] ##     task_id data_id            name ##  1:       2       2          anneal ##  2:       3       3        kr-vs-kp ##  3:       4       4           labor ##  4:       5       5      arrhythmia ##  5:       6       6          letter ##  6:       7       7       audiology ##  7:       8       8 liver-disorders ##  8:       9       9           autos ##  9:      10      10           lymph ## 10:      11      11   balance-scale"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/as_learner.OMLFlow.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an OpenML Flow to a mlr3 Learner — as_learner.OMLFlow","title":"Convert an OpenML Flow to a mlr3 Learner — as_learner.OMLFlow","text":"default function creates Pseudo-Learner (used training prediction) given task type. enables conversion OpenML Runs mlr3::ResampleResults. well defined subcomponent (.e. id) can appear Flow according OpenML docs.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/as_learner.OMLFlow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an OpenML Flow to a mlr3 Learner — as_learner.OMLFlow","text":"","code":"# S3 method for OMLFlow as_learner(x, task_type = NULL, ...)"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/as_learner.OMLFlow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an OpenML Flow to a mlr3 Learner — as_learner.OMLFlow","text":"x (OMLFlow) OMLFlow converted mlr3::Learner. task_type (character(1)) task type constrct pseudo-learner. information see OMLFlow. ... Additional arguments.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/benchmark_grid_oml.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to create a benchmark design — benchmark_grid_oml","title":"Helper function to create a benchmark design — benchmark_grid_oml","text":"OMLTasks contain tasks well resamplings. order create benchmark design list tasks corresponding instantiated resamplings, function can used.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/benchmark_grid_oml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to create a benchmark design — benchmark_grid_oml","text":"","code":"benchmark_grid_oml(tasks, learners, resamplings)"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/benchmark_grid_oml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to create a benchmark design — benchmark_grid_oml","text":"tasks (list() Task) list mlr3::Tasks. learners (list() Learner) list mlr3::Learners. resamplings (list() Resampling) list mlr3::Resamplings instantiated given tasks.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/benchmark_grid_oml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to create a benchmark design — benchmark_grid_oml","text":"","code":"if (FALSE) { library(\"mlr3\") collection = OMLCollection$new(99) otasks = collection$tasks[nrow <= 550, ][[\"task\"]] tasks = as_tasks(otasks) resamplings = as_resamplings(otasks) learners = lrns(c(\"classif.rpart\", \"classif.featureless\")) design = benchmark_grid_oml(tasks, learners, resamplings) print(design) bmr = benchmark(design) }"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/list_oml.html","id":null,"dir":"Reference","previous_headings":"","what":"List Data from OpenML — list_oml","title":"List Data from OpenML — list_oml","text":"function allows query data sets, tasks, flows, setups, runs, evaluation measures https://openml.org/d using simple filter criteria.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/list_oml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Data from OpenML — list_oml","text":"","code":"list_oml_data(   data_id = NULL,   data_name = NULL,   number_instances = NULL,   number_features = NULL,   number_classes = NULL,   number_missing_values = NULL,   tag = NULL,   limit = getOption(\"mlr3oml.limit\", 5000L),   test_server = getOption(\"mlr3oml.test_server\", FALSE),   ... )  list_oml_evaluations(   run_id = NULL,   task_id = NULL,   measures = NULL,   tag = NULL,   limit = getOption(\"mlr3oml.limit\", 5000L),   test_server = getOption(\"mlr3oml.test_server\", FALSE),   ... )  list_oml_flows(   uploader = NULL,   tag = NULL,   limit = getOption(\"mlr3oml.limit\", 5000L),   test_server = getOption(\"mlr3oml.test_server\", FALSE),   ... )  list_oml_measures(test_server = getOption(\"mlr3oml.test_server\", FALSE))  list_oml_runs(   run_id = NULL,   task_id = NULL,   tag = NULL,   flow_id = NULL,   limit = getOption(\"mlr3oml.limit\", 5000L),   test_server = getOption(\"mlr3oml.test_server\", FALSE),   ... )  list_oml_setups(   flow_id = NULL,   setup_id = NULL,   tag = NULL,   limit = getOption(\"mlr3oml.limit\", 5000L),   test_server = getOption(\"mlr3oml.test_server\", FALSE),   ... )  list_oml_tasks(   task_id = NULL,   data_id = NULL,   number_instances = NULL,   number_features = NULL,   number_classes = NULL,   number_missing_values = NULL,   tag = NULL,   limit = getOption(\"mlr3oml.limit\", 5000L),   test_server = getOption(\"mlr3oml.test_server\", FALSE),   ... )"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/list_oml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Data from OpenML — list_oml","text":"data_id (integer()) Vector data ids restrict . data_name (character(1)) Filter name data set. number_instances (integer()) Filter number instances. number_features (integer()) Filter number features. number_classes (integer()) Filter number labels target (classification tasks). number_missing_values (integer()) Filter number missing values. tag (character()) Filter tags. can provide multiple tags character vector. limit (integer()) Limit results limit records. Default value option \"mlr3oml.limit\", defaulting 5000. test_server (character(1)) Whether use OpenML test server (https://test.openml.org/) public server (https://www.openml.org/). Defaults value option \"mlr3oml.test_server\", FALSE set. ... () Additional (unsupported) filters, named arguments. run_id (integer()) Vector run ids restrict . task_id (integer()) Vector task ids restrict . measures (character()) Vector evaluation measures restrict . uploader (integer(1)) Filter uploader. flow_id (integer(1)) Filter flow id. setup_id (integer()) Vector setup ids restrict .","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/list_oml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Data from OpenML — list_oml","text":"(data.table()) results, null data.table data set matches filter criteria.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/list_oml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List Data from OpenML — list_oml","text":"Filter values usually provided single atomic values (typically integer character). Provide numeric vector length 2 (c(l, u)) find matches range \\([l, u]\\). Note subset filters exposed . feature-complete package, see OpenML. Alternatively, can pass additional filters via ... using names official API, c.f. https://www.openml.org/api_docs.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/list_oml.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List Data from OpenML — list_oml","text":"Casalicchio G, Bossek J, Lang M, Kirchhoff D, Kerschke P, Hofner B, Seibold H, Vanschoren J, Bischl B (2017). “OpenML: R Package Connect Machine Learning Platform OpenML.” Computational Statistics, 1--15. doi:10.1007/s00180-017-0742-2 . Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014). “OpenML.” ACM SIGKDD Explorations Newsletter, 15(2), 49--60. doi:10.1145/2641190.2641198 .","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/list_oml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Data from OpenML — list_oml","text":"","code":"# \\donttest{ ### query data sets # search for titanic data set data_sets = list_oml_data(data_name = \"titanic\") print(data_sets) #>    data_id    name version status MajorityClassSize MaxNominalAttDistinctValues #> 1:   40704 Titanic       2 active              1490                           2 #> 2:   40945 Titanic       1 active               809                           3 #> 3:   41265 Titanic       4 active                NA                          NA #> 4:   42436 Titanic       5 active                NA                          NA #> 5:   42437 titanic       6 active                NA                          NA #> 6:   42438 Titanic       7 active                NA                          NA #> 7:   42637 titanic       8 active                NA                          NA #> 8:   42638 titanic       9 active               549                          NA #>    MinorityClassSize NumberOfClasses NumberOfFeatures NumberOfInstances #> 1:               711               2                4              2201 #> 2:               500               2               14              1309 #> 3:                NA               0                8              1307 #> 4:                NA               0                8               891 #> 5:                NA               0                8               891 #> 6:                NA               0                8               891 #> 7:                NA              NA                8               891 #> 8:               342               2                8               891 #>    NumberOfInstancesWithMissingValues NumberOfMissingValues #> 1:                                  0                     0 #> 2:                               1309                  3855 #> 3:                                  0                     0 #> 4:                                  0                     0 #> 5:                                  0                     0 #> 6:                                  0                     0 #> 7:                                689                   689 #> 8:                                689                   689 #>    NumberOfNumericFeatures NumberOfSymbolicFeatures #> 1:                       3                        1 #> 2:                       6                        3 #> 3:                       8                        0 #> 4:                       8                        0 #> 5:                       8                        0 #> 6:                       8                        0 #> 7:                       3                        5 #> 8:                       3                        5  # search for a reduced version data_sets = list_oml_data(   data_name = \"titanic\",   number_instances = c(2200, 2300),   number_features = 4 ) print(data_sets) #>    data_id    name version status MajorityClassSize MaxNominalAttDistinctValues #> 1:   40704 Titanic       2 active              1490                           2 #>    MinorityClassSize NumberOfClasses NumberOfFeatures NumberOfInstances #> 1:               711               2                4              2201 #>    NumberOfInstancesWithMissingValues NumberOfMissingValues #> 1:                                  0                     0 #>    NumberOfNumericFeatures NumberOfSymbolicFeatures #> 1:                       3                        1  ### search tasks for this data set tasks = list_oml_tasks(data_id = data_sets$data_id) print(tasks) #>     task_id                             task_type data_id    name status #>  1:  145769                            Clustering   40704 Titanic active #>  2:  146230             Supervised Classification   40704 Titanic active #>  3:  146528                        Learning Curve   40704 Titanic active #>  4:  166588                            Clustering   40704 Titanic active #>  5:  167099             Supervised Classification   40704 Titanic active #>  6:  167486                        Learning Curve   40704 Titanic active #>  7:  167844                        Learning Curve   40704 Titanic active #>  8:  168202                        Learning Curve   40704 Titanic active #>  9:  168615                        Learning Curve   40704 Titanic active #> 10:  188610                            Clustering   40704 Titanic active #> 11:  189623                        Learning Curve   40704 Titanic active #> 12:  190235 Supervised Data Stream Classification   40704 Titanic active #> 13:  210117                            Clustering   40704 Titanic active #> 14:  211516                        Learning Curve   40704 Titanic active #> 15:  231791                            Clustering   40704 Titanic active #> 16:  252906                            Clustering   40704 Titanic active #> 17:  293680                            Clustering   40704 Titanic active #> 18:  293693                            Clustering   40704 Titanic active #> 19:  316179                            Clustering   40704 Titanic active #> 20:  337306                            Clustering   40704 Titanic active #> 21:  358461                            Clustering   40704 Titanic active #> 22:  360401                        Learning Curve   40704 Titanic active #>     task_id                             task_type data_id    name status #>     MajorityClassSize MaxNominalAttDistinctValues MinorityClassSize #>  1:              1490                           2               711 #>  2:              1490                           2               711 #>  3:              1490                           2               711 #>  4:              1490                           2               711 #>  5:              1490                           2               711 #>  6:              1490                           2               711 #>  7:              1490                           2               711 #>  8:              1490                           2               711 #>  9:              1490                           2               711 #> 10:              1490                           2               711 #> 11:              1490                           2               711 #> 12:              1490                           2               711 #> 13:              1490                           2               711 #> 14:              1490                           2               711 #> 15:              1490                           2               711 #> 16:              1490                           2               711 #> 17:              1490                           2               711 #> 18:              1490                           2               711 #> 19:              1490                           2               711 #> 20:              1490                           2               711 #> 21:              1490                           2               711 #> 22:              1490                           2               711 #>     MajorityClassSize MaxNominalAttDistinctValues MinorityClassSize #>     NumberOfClasses NumberOfFeatures NumberOfInstances #>  1:               2                4              2201 #>  2:               2                4              2201 #>  3:               2                4              2201 #>  4:               2                4              2201 #>  5:               2                4              2201 #>  6:               2                4              2201 #>  7:               2                4              2201 #>  8:               2                4              2201 #>  9:               2                4              2201 #> 10:               2                4              2201 #> 11:               2                4              2201 #> 12:               2                4              2201 #> 13:               2                4              2201 #> 14:               2                4              2201 #> 15:               2                4              2201 #> 16:               2                4              2201 #> 17:               2                4              2201 #> 18:               2                4              2201 #> 19:               2                4              2201 #> 20:               2                4              2201 #> 21:               2                4              2201 #> 22:               2                4              2201 #>     NumberOfClasses NumberOfFeatures NumberOfInstances #>     NumberOfInstancesWithMissingValues NumberOfMissingValues #>  1:                                  0                     0 #>  2:                                  0                     0 #>  3:                                  0                     0 #>  4:                                  0                     0 #>  5:                                  0                     0 #>  6:                                  0                     0 #>  7:                                  0                     0 #>  8:                                  0                     0 #>  9:                                  0                     0 #> 10:                                  0                     0 #> 11:                                  0                     0 #> 12:                                  0                     0 #> 13:                                  0                     0 #> 14:                                  0                     0 #> 15:                                  0                     0 #> 16:                                  0                     0 #> 17:                                  0                     0 #> 18:                                  0                     0 #> 19:                                  0                     0 #> 20:                                  0                     0 #> 21:                                  0                     0 #> 22:                                  0                     0 #>     NumberOfInstancesWithMissingValues NumberOfMissingValues #>     NumberOfNumericFeatures NumberOfSymbolicFeatures #>  1:                       3                        1 #>  2:                       3                        1 #>  3:                       3                        1 #>  4:                       3                        1 #>  5:                       3                        1 #>  6:                       3                        1 #>  7:                       3                        1 #>  8:                       3                        1 #>  9:                       3                        1 #> 10:                       3                        1 #> 11:                       3                        1 #> 12:                       3                        1 #> 13:                       3                        1 #> 14:                       3                        1 #> 15:                       3                        1 #> 16:                       3                        1 #> 17:                       3                        1 #> 18:                       3                        1 #> 19:                       3                        1 #> 20:                       3                        1 #> 21:                       3                        1 #> 22:                       3                        1 #>     NumberOfNumericFeatures NumberOfSymbolicFeatures   # query runs, group by number of runs per task_id runs = list_oml_runs(task_id = tasks$task_id) runs[, .N, by = task_id] #>    task_id  N #> 1:  146230 35 # }"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/mlr3oml-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr3oml: Connector Between 'mlr3' and 'OpenML' — mlr3oml-package","title":"mlr3oml: Connector Between 'mlr3' and 'OpenML' — mlr3oml-package","text":"Provides interface 'OpenML.org' list download machine learning data, tasks experiments. OpenML objects can automatically converted 'mlr3' objects. sophisticated interface also allows uploading OpenML, see 'OpenML' package.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/mlr3oml-package.html","id":"mlr-integration","dir":"Reference","previous_headings":"","what":"mlr3 Integration","title":"mlr3oml: Connector Between 'mlr3' and 'OpenML' — mlr3oml-package","text":"package adds mlr3::Task \"oml\" mlr3::Resampling \"oml\" mlr3::mlr_tasks mlr3::mlr_resamplings, respectively. former may pass either data_id task_id, latter requires task_id. Furthermore allows convert OpenML objects mlr3 objects using usual S3 generics mlr3::as_task, mlr3::as_learner, mlr3::as_resampling, mlr3::as_resample_result, mlr3::as_benchmark_result mlr3::as_data_backend. allows frictionless integration OpenML mlr3.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/mlr3oml-package.html","id":"options","dir":"Reference","previous_headings":"","what":"Options","title":"mlr3oml: Connector Between 'mlr3' and 'OpenML' — mlr3oml-package","text":"mlr3oml.cache: Enables disables caching globally. set FALSE, caching disabled. set TRUE, cache directory reported R_user_dir() used. Alternatively, can specify path local file system . Default FALSE. mlr3oml.api_key: API key use. operations supported package work without API key, might get rate limited without API key. set, defaults value environment variable OPENMLAPIKEY. mlr3oml.arff_parser: ARFF parser use, defaults internal one relies data.table::fread(). Can also set \"RWeka\" parser RWeka. mlr3oml.parquet: Enables disables parquet default file format. set TRUE, parquet version datasets used default. set FALSE, arff version datasets used default. Default FALSE. Relevant developers mlr3oml.test_server: default value whether use OpenML test server. Default FALSE. mlr3oml.test_api_key: API key use test server. set, defaults value environment variable TESTOPENMLAPIKEY.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/mlr3oml-package.html","id":"logging","dir":"Reference","previous_headings":"","what":"Logging","title":"mlr3oml: Connector Between 'mlr3' and 'OpenML' — mlr3oml-package","text":"lgr package used logging. change threshold, use lgr::get_logger(\"mlr3oml\")$set_threshold().","code":""},{"path":[]},{"path":"https://mlr3oml.mlr-org.com/dev/reference/mlr3oml-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlr3oml: Connector Between 'mlr3' and 'OpenML' — mlr3oml-package","text":"Maintainer: Michel Lang michellang@gmail.com (ORCID) Authors: Sebastian Fischer sebf.fischer@gmail.com (ORCID)","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenML Collection — oml_collection_r6","title":"OpenML Collection — oml_collection_r6","text":"class collections (previously known studies) served https://openml.org. collection can either task collection run collection. object can also constructed using sugar function oml_collection(). Run Collection run collection contains runs, flows, datasets tasks. primary object runs (main_entity_type \"run\"). flows, datasets tasks used runs. Task Collection task collection (main_entity_type = \"task\") contains tasks datasets. primary object tasks (main_entity_type \"task\"). datasets used tasks. Note: Benchmark Suites OpenML also collections.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"caching","dir":"Reference","previous_headings":"","what":"Caching","title":"OpenML Collection — oml_collection_r6","text":"OpenML collection cached, can modified -place server, e.g. adding removing tasks runs. construction argument cache therefore controls wether caching applied OpenML objects contained collection.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"mlr-intergration","dir":"Reference","previous_headings":"","what":"mlr3 Intergration","title":"OpenML Collection — oml_collection_r6","text":"Obtain list mlr3::Tasks using mlr3::as_tasks. Obtain list mlr3::Resamplings using mlr3::as_resamplings. Obtain list mlr3::Learners using mlr3::as_learners (main_entity_type \"run\"). Obtain mlr3::BenchmarkResult using mlr3::as_benchmark_result (main_entity_type \"run\").","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"OpenML Collection — oml_collection_r6","text":"Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014). “OpenML.” ACM SIGKDD Explorations Newsletter, 15(2), 49--60. doi:10.1145/2641190.2641198 .","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"OpenML Collection — oml_collection_r6","text":"mlr3oml::OMLObject -> OMLCollection","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"OpenML Collection — oml_collection_r6","text":"desc (list()) Colllection description (meta information), downloaded converted JSON API response. parquet (logical(1)) Whether use parquet. main_entity_type (character(n)) main entity type, either \"run\" \"task\". flow_ids (integer(n)) vector containing flow ids collection. data_ids (integer(n)) vector containing data ids collection. run_ids (integer(n)) vector containing run ids collection. task_ids (integer(n)) vector containing task ids collection. runs (data.table()) data.table summarizing runs included collection. Returns NULL Task Collections. flows (data.table()) data.table summarizing flows included collection. Returns NULL Task Collections. data (data.table()) data.table summarizing datasets included collection. tasks (data.table()) data.table summarizing tasks included collection.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"OpenML Collection — oml_collection_r6","text":"mlr3oml::OMLObject$help()","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"OpenML Collection — oml_collection_r6","text":"OMLCollection$new() OMLCollection$print() OMLCollection$clone()","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"OpenML Collection — oml_collection_r6","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenML Collection — oml_collection_r6","text":"","code":"OMLCollection$new(   id,   cache = getOption(\"mlr3oml.cache\", FALSE),   parquet = getOption(\"mlr3oml.parquet\", FALSE),   test_server = getOption(\"mlr3oml.test_server\", FALSE) )"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenML Collection — oml_collection_r6","text":"id (integer(1)) OpenML id object. cache (logical(1) | character(1)) See field cache explanation possible values. Defaults value option \"mlr3oml.cache\", FALSE set. collection cached, can modified -place OpenML, e.g. adding removing tasks runs. parameter therefore controls whether contained elements cached loaded, e.g. accessing included tasks. parquet (logical(1)) Whether use parquet instead arff. parquet available, fall back arff. test_server (character(1)) Whether use OpenML test server (https://test.openml.org/) public server (https://www.openml.org/). Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"OpenML Collection — oml_collection_r6","text":"Prints object.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenML Collection — oml_collection_r6","text":"","code":"OMLCollection$print()"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"OpenML Collection — oml_collection_r6","text":"objects class cloneable method.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenML Collection — oml_collection_r6","text":"","code":"OMLCollection$clone(deep = FALSE)"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenML Collection — oml_collection_r6","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_collection_r6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenML Collection — oml_collection_r6","text":"","code":"# \\donttest{ library(\"mlr3\") # OpenML Run collection: run_collection = OMLCollection$new(id = 232) # using sugar run_collection = oml_collection(id = 232) run_collection$main_entity_type #> [1] \"run\" run_collection$tasks #>    id          task     data                 task_type target  nrow ncol #> 1:  3 <OMLTask[25]> kr-vs-kp Supervised Classification  class  3196   37 #> 2:  6 <OMLTask[25]>   letter Supervised Classification  class 20000   17 #>    missing numeric symbolic binary     task_splits #> 1:       0       0       37     35 crossvalidation #> 2:       0      16        1      0 crossvalidation run_collection$data #>    id          data     name  nrow ncol missing numeric symbolic binary #> 1:  3 <OMLData[25]> kr-vs-kp  3196   37       0       0       37     35 #> 2:  6 <OMLData[25]>   letter 20000   17       0      16        1      0 run_collection$flows #>       id          flow                           name #> 1: 17369 <OMLFlow[16]> sklearn.model_selection._[...] #> 2: 17374 <OMLFlow[16]> sklearn.model_selection._[...] run_collection$runs #>          id          run                 task_type     data #> 1: 10417460 <OMLRun[25]> Supervised Classification kr-vs-kp #> 2: 10417461 <OMLRun[25]> Supervised Classification kr-vs-kp #> 3: 10417462 <OMLRun[25]> Supervised Classification   letter #> 4: 10417463 <OMLRun[25]> Supervised Classification   letter #>                              flow     task_splits #> 1: sklearn.model_selection._[...] crossvalidation #> 2: sklearn.model_selection._[...] crossvalidation #> 3: sklearn.model_selection._[...] crossvalidation #> 4: sklearn.model_selection._[...] crossvalidation  # mlr3 conversion: tasks = as_tasks(run_collection) resamplings = as_resamplings(run_collection) learners = as_learners(run_collection, \"classif\")  bmr = as_benchmark_result(run_collection) bmr$score(msr(\"classif.ce\")) #>                                    uhash nr              task  task_id #>  1: 142f3875-300e-4d22-92b3-13afb2298fea  1 <TaskClassif[50]> kr-vs-kp #>  2: 142f3875-300e-4d22-92b3-13afb2298fea  1 <TaskClassif[50]> kr-vs-kp #>  3: 142f3875-300e-4d22-92b3-13afb2298fea  1 <TaskClassif[50]> kr-vs-kp #>  4: 142f3875-300e-4d22-92b3-13afb2298fea  1 <TaskClassif[50]> kr-vs-kp #>  5: 142f3875-300e-4d22-92b3-13afb2298fea  1 <TaskClassif[50]> kr-vs-kp #>  6: 142f3875-300e-4d22-92b3-13afb2298fea  1 <TaskClassif[50]> kr-vs-kp #>  7: 142f3875-300e-4d22-92b3-13afb2298fea  1 <TaskClassif[50]> kr-vs-kp #>  8: 142f3875-300e-4d22-92b3-13afb2298fea  1 <TaskClassif[50]> kr-vs-kp #>  9: 142f3875-300e-4d22-92b3-13afb2298fea  1 <TaskClassif[50]> kr-vs-kp #> 10: 142f3875-300e-4d22-92b3-13afb2298fea  1 <TaskClassif[50]> kr-vs-kp #> 11: c6a9063c-e33d-4f99-9b2b-ff3075d47f92  2 <TaskClassif[50]> kr-vs-kp #> 12: c6a9063c-e33d-4f99-9b2b-ff3075d47f92  2 <TaskClassif[50]> kr-vs-kp #> 13: c6a9063c-e33d-4f99-9b2b-ff3075d47f92  2 <TaskClassif[50]> kr-vs-kp #> 14: c6a9063c-e33d-4f99-9b2b-ff3075d47f92  2 <TaskClassif[50]> kr-vs-kp #> 15: c6a9063c-e33d-4f99-9b2b-ff3075d47f92  2 <TaskClassif[50]> kr-vs-kp #> 16: c6a9063c-e33d-4f99-9b2b-ff3075d47f92  2 <TaskClassif[50]> kr-vs-kp #> 17: c6a9063c-e33d-4f99-9b2b-ff3075d47f92  2 <TaskClassif[50]> kr-vs-kp #> 18: c6a9063c-e33d-4f99-9b2b-ff3075d47f92  2 <TaskClassif[50]> kr-vs-kp #> 19: c6a9063c-e33d-4f99-9b2b-ff3075d47f92  2 <TaskClassif[50]> kr-vs-kp #> 20: c6a9063c-e33d-4f99-9b2b-ff3075d47f92  2 <TaskClassif[50]> kr-vs-kp #> 21: 23afd2b7-5767-47fa-9870-77f921c62a28  3 <TaskClassif[50]>   letter #> 22: 23afd2b7-5767-47fa-9870-77f921c62a28  3 <TaskClassif[50]>   letter #> 23: 23afd2b7-5767-47fa-9870-77f921c62a28  3 <TaskClassif[50]>   letter #> 24: 23afd2b7-5767-47fa-9870-77f921c62a28  3 <TaskClassif[50]>   letter #> 25: 23afd2b7-5767-47fa-9870-77f921c62a28  3 <TaskClassif[50]>   letter #> 26: 23afd2b7-5767-47fa-9870-77f921c62a28  3 <TaskClassif[50]>   letter #> 27: 23afd2b7-5767-47fa-9870-77f921c62a28  3 <TaskClassif[50]>   letter #> 28: 23afd2b7-5767-47fa-9870-77f921c62a28  3 <TaskClassif[50]>   letter #> 29: 23afd2b7-5767-47fa-9870-77f921c62a28  3 <TaskClassif[50]>   letter #> 30: 23afd2b7-5767-47fa-9870-77f921c62a28  3 <TaskClassif[50]>   letter #> 31: 5f2c6ec0-b963-4434-838d-2eccf20ea7d4  4 <TaskClassif[50]>   letter #> 32: 5f2c6ec0-b963-4434-838d-2eccf20ea7d4  4 <TaskClassif[50]>   letter #> 33: 5f2c6ec0-b963-4434-838d-2eccf20ea7d4  4 <TaskClassif[50]>   letter #> 34: 5f2c6ec0-b963-4434-838d-2eccf20ea7d4  4 <TaskClassif[50]>   letter #> 35: 5f2c6ec0-b963-4434-838d-2eccf20ea7d4  4 <TaskClassif[50]>   letter #> 36: 5f2c6ec0-b963-4434-838d-2eccf20ea7d4  4 <TaskClassif[50]>   letter #> 37: 5f2c6ec0-b963-4434-838d-2eccf20ea7d4  4 <TaskClassif[50]>   letter #> 38: 5f2c6ec0-b963-4434-838d-2eccf20ea7d4  4 <TaskClassif[50]>   letter #> 39: 5f2c6ec0-b963-4434-838d-2eccf20ea7d4  4 <TaskClassif[50]>   letter #> 40: 5f2c6ec0-b963-4434-838d-2eccf20ea7d4  4 <TaskClassif[50]>   letter #>                                    uhash nr              task  task_id #>                          learner learner_id             resampling #>  1: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #>  2: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #>  3: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #>  4: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #>  5: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #>  6: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #>  7: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #>  8: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #>  9: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #> 10: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #> 11: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 12: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 13: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 14: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 15: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 16: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 17: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 18: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 19: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 20: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 21: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #> 22: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #> 23: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #> 24: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #> 25: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #> 26: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #> 27: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #> 28: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #> 29: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #> 30: <LearnerClassifOML17374[36]>  oml.17374 <ResamplingCustom[20]> #> 31: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 32: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 33: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 34: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 35: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 36: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 37: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 38: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 39: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #> 40: <LearnerClassifOML17369[36]>  oml.17369 <ResamplingCustom[20]> #>                          learner learner_id             resampling #>     resampling_id iteration              prediction  classif.ce #>  1:        custom         1 <PredictionClassif[20]> 0.003134796 #>  2:        custom         2 <PredictionClassif[20]> 0.009375000 #>  3:        custom         3 <PredictionClassif[20]> 0.000000000 #>  4:        custom         4 <PredictionClassif[20]> 0.003125000 #>  5:        custom         5 <PredictionClassif[20]> 0.006250000 #>  6:        custom         6 <PredictionClassif[20]> 0.000000000 #>  7:        custom         7 <PredictionClassif[20]> 0.003134796 #>  8:        custom         8 <PredictionClassif[20]> 0.006269592 #>  9:        custom         9 <PredictionClassif[20]> 0.003134796 #> 10:        custom        10 <PredictionClassif[20]> 0.006269592 #> 11:        custom         1 <PredictionClassif[20]> 0.006269592 #> 12:        custom         2 <PredictionClassif[20]> 0.009375000 #> 13:        custom         3 <PredictionClassif[20]> 0.003125000 #> 14:        custom         4 <PredictionClassif[20]> 0.003125000 #> 15:        custom         5 <PredictionClassif[20]> 0.012500000 #> 16:        custom         6 <PredictionClassif[20]> 0.000000000 #> 17:        custom         7 <PredictionClassif[20]> 0.003134796 #> 18:        custom         8 <PredictionClassif[20]> 0.009404389 #> 19:        custom         9 <PredictionClassif[20]> 0.006269592 #> 20:        custom        10 <PredictionClassif[20]> 0.009404389 #> 21:        custom         1 <PredictionClassif[20]> 0.047523762 #> 22:        custom         2 <PredictionClassif[20]> 0.039500000 #> 23:        custom         3 <PredictionClassif[20]> 0.043500000 #> 24:        custom         4 <PredictionClassif[20]> 0.041000000 #> 25:        custom         5 <PredictionClassif[20]> 0.030500000 #> 26:        custom         6 <PredictionClassif[20]> 0.044000000 #> 27:        custom         7 <PredictionClassif[20]> 0.045000000 #> 28:        custom         8 <PredictionClassif[20]> 0.036000000 #> 29:        custom         9 <PredictionClassif[20]> 0.039000000 #> 30:        custom        10 <PredictionClassif[20]> 0.031000000 #> 31:        custom         1 <PredictionClassif[20]> 0.047523762 #> 32:        custom         2 <PredictionClassif[20]> 0.039500000 #> 33:        custom         3 <PredictionClassif[20]> 0.043500000 #> 34:        custom         4 <PredictionClassif[20]> 0.041000000 #> 35:        custom         5 <PredictionClassif[20]> 0.030500000 #> 36:        custom         6 <PredictionClassif[20]> 0.044000000 #> 37:        custom         7 <PredictionClassif[20]> 0.045000000 #> 38:        custom         8 <PredictionClassif[20]> 0.036000000 #> 39:        custom         9 <PredictionClassif[20]> 0.039000000 #> 40:        custom        10 <PredictionClassif[20]> 0.031000000 #>     resampling_id iteration              prediction  classif.ce  # OpenML task collection task_collection = OMLCollection$new(id = 99) # using sugar task_collection = oml_collection(id = 99)  task_collection$main_entity_type #> [1] \"task\" task_collection$tasks #>         id          task                           data #>  1:      3 <OMLTask[25]>                       kr-vs-kp #>  2:      6 <OMLTask[25]>                         letter #>  3:     11 <OMLTask[25]>                  balance-scale #>  4:     12 <OMLTask[25]>                  mfeat-factors #>  5:     14 <OMLTask[25]>                  mfeat-fourier #>  6:     15 <OMLTask[25]>                       breast-w #>  7:     16 <OMLTask[25]>                 mfeat-karhunen #>  8:     18 <OMLTask[25]>            mfeat-morphological #>  9:     22 <OMLTask[25]>                  mfeat-zernike #> 10:     23 <OMLTask[25]>                            cmc #> 11:     28 <OMLTask[25]>                      optdigits #> 12:     29 <OMLTask[25]>                credit-approval #> 13:     31 <OMLTask[25]>                       credit-g #> 14:     32 <OMLTask[25]>                      pendigits #> 15:     37 <OMLTask[25]>                       diabetes #> 16:     43 <OMLTask[25]>                       spambase #> 17:     45 <OMLTask[25]>                         splice #> 18:     49 <OMLTask[25]>                    tic-tac-toe #> 19:     53 <OMLTask[25]>                        vehicle #> 20:    219 <OMLTask[25]>                    electricity #> 21:   2074 <OMLTask[25]>                       satimage #> 22:   2079 <OMLTask[25]>                     eucalyptus #> 23:   3021 <OMLTask[25]>                           sick #> 24:   3022 <OMLTask[25]>                          vowel #> 25:   3481 <OMLTask[25]>                         isolet #> 26:   3549 <OMLTask[25]>         analcatdata_authorship #> 27:   3560 <OMLTask[25]>               analcatdata_dmft #> 28:   3573 <OMLTask[25]>                      mnist_784 #> 29:   3902 <OMLTask[25]>                            pc4 #> 30:   3903 <OMLTask[25]>                            pc3 #> 31:   3904 <OMLTask[25]>                            jm1 #> 32:   3913 <OMLTask[25]>                            kc2 #> 33:   3917 <OMLTask[25]>                            kc1 #> 34:   3918 <OMLTask[25]>                            pc1 #> 35:   7592 <OMLTask[25]>                          adult #> 36:   9910 <OMLTask[25]>                    Bioresponse #> 37:   9946 <OMLTask[25]>                           wdbc #> 38:   9952 <OMLTask[25]>                        phoneme #> 39:   9957 <OMLTask[25]>                    qsar-biodeg #> 40:   9960 <OMLTask[25]>          wall-robot-navigation #> 41:   9964 <OMLTask[25]>                        semeion #> 42:   9971 <OMLTask[25]>                           ilpd #> 43:   9976 <OMLTask[25]>                        madelon #> 44:   9977 <OMLTask[25]>                          nomao #> 45:   9978 <OMLTask[25]>                ozone-level-8hr #> 46:   9981 <OMLTask[25]>                         cnae-9 #> 47:   9985 <OMLTask[25]>    first-order-theorem-proving #> 48:  10093 <OMLTask[25]>        banknote-authentication #> 49:  10101 <OMLTask[25]> blood-transfusion-service[...] #> 50:  14952 <OMLTask[25]>               PhishingWebsites #> 51:  14954 <OMLTask[25]>                 cylinder-bands #> 52:  14965 <OMLTask[25]>                 bank-marketing #> 53:  14969 <OMLTask[25]> GesturePhaseSegmentationP[...] #> 54:  14970 <OMLTask[25]>                            har #> 55: 125920 <OMLTask[25]>                  dresses-sales #> 56: 125922 <OMLTask[25]>                        texture #> 57: 146195 <OMLTask[25]>                      connect-4 #> 58: 146800 <OMLTask[25]>                    MiceProtein #> 59: 146817 <OMLTask[25]>             steel-plates-fault #> 60: 146819 <OMLTask[25]> climate-model-simulation-[...] #> 61: 146820 <OMLTask[25]>                           wilt #> 62: 146821 <OMLTask[25]>                            car #> 63: 146822 <OMLTask[25]>                        segment #> 64: 146824 <OMLTask[25]>                    mfeat-pixel #> 65: 146825 <OMLTask[25]>                  Fashion-MNIST #> 66: 167119 <OMLTask[25]> jungle_chess_2pcs_raw_end[...] #> 67: 167120 <OMLTask[25]>                    numerai28.6 #> 68: 167121 <OMLTask[25]>               Devnagari-Script #> 69: 167124 <OMLTask[25]>                       CIFAR_10 #> 70: 167125 <OMLTask[25]>        Internet-Advertisements #> 71: 167140 <OMLTask[25]>                            dna #> 72: 167141 <OMLTask[25]>                          churn #>         id          task                           data #>                     task_type                    target  nrow ncol missing #>  1: Supervised Classification                     class  3196   37       0 #>  2: Supervised Classification                     class 20000   17       0 #>  3: Supervised Classification                     class   625    5       0 #>  4: Supervised Classification                     class  2000  217       0 #>  5: Supervised Classification                     class  2000   77       0 #>  6: Supervised Classification                     Class   699   10      16 #>  7: Supervised Classification                     class  2000   65       0 #>  8: Supervised Classification                     class  2000    7       0 #>  9: Supervised Classification                     class  2000   48       0 #> 10: Supervised Classification Contraceptive_method_used  1473   10       0 #> 11: Supervised Classification                     class  5620   65       0 #> 12: Supervised Classification                     class   690   16      67 #> 13: Supervised Classification                     class  1000   21       0 #> 14: Supervised Classification                     class 10992   17       0 #> 15: Supervised Classification                     class   768    9       0 #> 16: Supervised Classification                     class  4601   58       0 #> 17: Supervised Classification                     Class  3190   61       0 #> 18: Supervised Classification                     Class   958   10       0 #> 19: Supervised Classification                     Class   846   19       0 #> 20: Supervised Classification                     class 45312    9       0 #> 21: Supervised Classification                     class  6430   37       0 #> 22: Supervised Classification                   Utility   736   20     448 #> 23: Supervised Classification                     Class  3772   30    6064 #> 24: Supervised Classification                     Class   990   13       0 #> 25: Supervised Classification                     class  7797  618       0 #> 26: Supervised Classification                    Author   841   71       0 #> 27: Supervised Classification                Prevention   797    5       0 #> 28: Supervised Classification                     class 70000  785       0 #> 29: Supervised Classification                         c  1458   38       0 #> 30: Supervised Classification                         c  1563   38       0 #> 31: Supervised Classification                   defects 10885   22      25 #> 32: Supervised Classification                  problems   522   22       0 #> 33: Supervised Classification                   defects  2109   22       0 #> 34: Supervised Classification                   defects  1109   22       0 #> 35: Supervised Classification                     class 48842   15    6465 #> 36: Supervised Classification                    target  3751 1777       0 #> 37: Supervised Classification                     Class   569   31       0 #> 38: Supervised Classification                     Class  5404    6       0 #> 39: Supervised Classification                     Class  1055   42       0 #> 40: Supervised Classification                     Class  5456   25       0 #> 41: Supervised Classification                     Class  1593  257       0 #> 42: Supervised Classification                     Class   583   11       0 #> 43: Supervised Classification                     Class  2600  501       0 #> 44: Supervised Classification                     Class 34465  119       0 #> 45: Supervised Classification                     Class  2534   73       0 #> 46: Supervised Classification                     Class  1080  857       0 #> 47: Supervised Classification                     Class  6118   52       0 #> 48: Supervised Classification                     Class  1372    5       0 #> 49: Supervised Classification                     Class   748    5       0 #> 50: Supervised Classification                    Result 11055   31       0 #> 51: Supervised Classification                 band_type   540   40     999 #> 52: Supervised Classification                     Class 45211   17       0 #> 53: Supervised Classification                     Phase  9873   33       0 #> 54: Supervised Classification                     Class 10299  562       0 #> 55: Supervised Classification                     Class   500   13     835 #> 56: Supervised Classification                     Class  5500   41       0 #> 57: Supervised Classification                     class 67557   43       0 #> 58: Supervised Classification                     class  1080   82    1396 #> 59: Supervised Classification                    target  1941   28       0 #> 60: Supervised Classification                   outcome   540   21       0 #> 61: Supervised Classification                     class  4839    6       0 #> 62: Supervised Classification                     class  1728    7       0 #> 63: Supervised Classification                     class  2310   20       0 #> 64: Supervised Classification                     class  2000  241       0 #> 65: Supervised Classification                     class 70000  785       0 #> 66: Supervised Classification                     class 44819    7       0 #> 67: Supervised Classification              attribute_21 96320   22       0 #> 68: Supervised Classification                 character 92000 1025       0 #> 69: Supervised Classification                     class 60000 3073       0 #> 70: Supervised Classification                     class  3279 1559       0 #> 71: Supervised Classification                     class  3186  181       0 #> 72: Supervised Classification                     class  5000   21       0 #>                     task_type                    target  nrow ncol missing #>     numeric symbolic binary     task_splits #>  1:       0       37     35 crossvalidation #>  2:      16        1      0 crossvalidation #>  3:       4        1      0 crossvalidation #>  4:     216        1      0 crossvalidation #>  5:      76        1      0 crossvalidation #>  6:       9        1      1 crossvalidation #>  7:      64        1      0 crossvalidation #>  8:       6        1      0 crossvalidation #>  9:      47        1      0 crossvalidation #> 10:       2        8      3 crossvalidation #> 11:      64        1      0 crossvalidation #> 12:       6       10      5 crossvalidation #> 13:       7       14      3 crossvalidation #> 14:      16        1      0 crossvalidation #> 15:       8        1      1 crossvalidation #> 16:      57        1      1 crossvalidation #> 17:       0       61      0 crossvalidation #> 18:       0       10      1 crossvalidation #> 19:      18        1      0 crossvalidation #> 20:       7        2      1 crossvalidation #> 21:      36        1      0 crossvalidation #> 22:      14        6      0 crossvalidation #> 23:       7       23     21 crossvalidation #> 24:      10        3      1 crossvalidation #> 25:     617        1      0 crossvalidation #> 26:      70        1      0 crossvalidation #> 27:       0        5      1 crossvalidation #> 28:     784        1      0 crossvalidation #> 29:      37        1      1 crossvalidation #> 30:      37        1      1 crossvalidation #> 31:      21        1      1 crossvalidation #> 32:      21        1      1 crossvalidation #> 33:      21        1      1 crossvalidation #> 34:      21        1      1 crossvalidation #> 35:       6        9      2 crossvalidation #> 36:    1776        1      1 crossvalidation #> 37:      30        1      1 crossvalidation #> 38:       5        1      1 crossvalidation #> 39:      41        1      1 crossvalidation #> 40:      24        1      0 crossvalidation #> 41:     256        1      0 crossvalidation #> 42:       9        2      2 crossvalidation #> 43:     500        1      1 crossvalidation #> 44:      89       30      3 crossvalidation #> 45:      72        1      1 crossvalidation #> 46:     856        1      0 crossvalidation #> 47:      51        1      0 crossvalidation #> 48:       4        1      1 crossvalidation #> 49:       4        1      1 crossvalidation #> 50:       0       31     23 crossvalidation #> 51:      18       22      4 crossvalidation #> 52:       7       10      4 crossvalidation #> 53:      32        1      0 crossvalidation #> 54:     561        1      0 crossvalidation #> 55:       1       12      1 crossvalidation #> 56:      40        1      0 crossvalidation #> 57:       0       43      0 crossvalidation #> 58:      77        5      3 crossvalidation #> 59:      27        1      0 crossvalidation #> 60:      20        1      1 crossvalidation #> 61:       5        1      1 crossvalidation #> 62:       0        7      0 crossvalidation #> 63:      19        1      0 crossvalidation #> 64:     240        1      0 crossvalidation #> 65:     784        1      0 crossvalidation #> 66:       6        1      0 crossvalidation #> 67:      21        1      1 crossvalidation #> 68:    1024        1      0 crossvalidation #> 69:    3072        1      0 crossvalidation #> 70:       3     1556   1556 crossvalidation #> 71:       0      181    180 crossvalidation #> 72:      16        5      3 crossvalidation #>     numeric symbolic binary     task_splits task_collection$data #>        id          data                                   name  nrow ncol #>  1:     3 <OMLData[25]>                               kr-vs-kp  3196   37 #>  2:     6 <OMLData[25]>                                 letter 20000   17 #>  3:    11 <OMLData[25]>                          balance-scale   625    5 #>  4:    12 <OMLData[25]>                          mfeat-factors  2000  217 #>  5:    14 <OMLData[25]>                          mfeat-fourier  2000   77 #>  6:    15 <OMLData[25]>                               breast-w   699   10 #>  7:    16 <OMLData[25]>                         mfeat-karhunen  2000   65 #>  8:    18 <OMLData[25]>                    mfeat-morphological  2000    7 #>  9:    22 <OMLData[25]>                          mfeat-zernike  2000   48 #> 10:    23 <OMLData[25]>                                    cmc  1473   10 #> 11:    28 <OMLData[25]>                              optdigits  5620   65 #> 12:    29 <OMLData[25]>                        credit-approval   690   16 #> 13:    31 <OMLData[25]>                               credit-g  1000   21 #> 14:    32 <OMLData[25]>                              pendigits 10992   17 #> 15:    37 <OMLData[25]>                               diabetes   768    9 #> 16:    38 <OMLData[25]>                                   sick  3772   30 #> 17:    44 <OMLData[25]>                               spambase  4601   58 #> 18:    46 <OMLData[25]>                                 splice  3190   61 #> 19:    50 <OMLData[25]>                            tic-tac-toe   958   10 #> 20:    54 <OMLData[25]>                                vehicle   846   19 #> 21:   151 <OMLData[25]>                            electricity 45312    9 #> 22:   182 <OMLData[25]>                               satimage  6430   37 #> 23:   188 <OMLData[25]>                             eucalyptus   736   20 #> 24:   300 <OMLData[25]>                                 isolet  7797  618 #> 25:   307 <OMLData[25]>                                  vowel   990   13 #> 26:   458 <OMLData[25]>                 analcatdata_authorship   841   71 #> 27:   469 <OMLData[25]>                       analcatdata_dmft   797    5 #> 28:   554 <OMLData[25]>                              mnist_784 70000  785 #> 29:  1049 <OMLData[25]>                                    pc4  1458   38 #> 30:  1050 <OMLData[25]>                                    pc3  1563   38 #> 31:  1053 <OMLData[25]>                                    jm1 10885   22 #> 32:  1063 <OMLData[25]>                                    kc2   522   22 #> 33:  1067 <OMLData[25]>                                    kc1  2109   22 #> 34:  1068 <OMLData[25]>                                    pc1  1109   22 #> 35:  1461 <OMLData[25]>                         bank-marketing 45211   17 #> 36:  1462 <OMLData[25]>                banknote-authentication  1372    5 #> 37:  1464 <OMLData[25]>       blood-transfusion-service-center   748    5 #> 38:  1468 <OMLData[25]>                                 cnae-9  1080  857 #> 39:  1475 <OMLData[25]>            first-order-theorem-proving  6118   52 #> 40:  1478 <OMLData[25]>                                    har 10299  562 #> 41:  1480 <OMLData[25]>                                   ilpd   583   11 #> 42:  1485 <OMLData[25]>                                madelon  2600  501 #> 43:  1486 <OMLData[25]>                                  nomao 34465  119 #> 44:  1487 <OMLData[25]>                        ozone-level-8hr  2534   73 #> 45:  1489 <OMLData[25]>                                phoneme  5404    6 #> 46:  1494 <OMLData[25]>                            qsar-biodeg  1055   42 #> 47:  1497 <OMLData[25]>                  wall-robot-navigation  5456   25 #> 48:  1501 <OMLData[25]>                                semeion  1593  257 #> 49:  1510 <OMLData[25]>                                   wdbc   569   31 #> 50:  1590 <OMLData[25]>                                  adult 48842   15 #> 51:  4134 <OMLData[25]>                            Bioresponse  3751 1777 #> 52:  4534 <OMLData[25]>                       PhishingWebsites 11055   31 #> 53:  4538 <OMLData[25]>      GesturePhaseSegmentationProcessed  9873   33 #> 54:  6332 <OMLData[25]>                         cylinder-bands   540   40 #> 55: 23381 <OMLData[25]>                          dresses-sales   500   13 #> 56: 23517 <OMLData[25]>                            numerai28.6 96320   22 #> 57: 40499 <OMLData[25]>                                texture  5500   41 #> 58: 40668 <OMLData[25]>                              connect-4 67557   43 #> 59: 40670 <OMLData[25]>                                    dna  3186  181 #> 60: 40701 <OMLData[25]>                                  churn  5000   21 #> 61: 40923 <OMLData[25]>                       Devnagari-Script 92000 1025 #> 62: 40927 <OMLData[25]>                               CIFAR_10 60000 3073 #> 63: 40966 <OMLData[25]>                            MiceProtein  1080   82 #> 64: 40975 <OMLData[25]>                                    car  1728    7 #> 65: 40978 <OMLData[25]>                Internet-Advertisements  3279 1559 #> 66: 40979 <OMLData[25]>                            mfeat-pixel  2000  241 #> 67: 40982 <OMLData[25]>                     steel-plates-fault  1941   28 #> 68: 40983 <OMLData[25]>                                   wilt  4839    6 #> 69: 40984 <OMLData[25]>                                segment  2310   20 #> 70: 40994 <OMLData[25]>       climate-model-simulation-crashes   540   21 #> 71: 40996 <OMLData[25]>                          Fashion-MNIST 70000  785 #> 72: 41027 <OMLData[25]> jungle_chess_2pcs_raw_endgame_complete 44819    7 #>        id          data                                   name  nrow ncol #>     missing numeric symbolic binary #>  1:       0       0       37     35 #>  2:       0      16        1      0 #>  3:       0       4        1      0 #>  4:       0     216        1      0 #>  5:       0      76        1      0 #>  6:      16       9        1      1 #>  7:       0      64        1      0 #>  8:       0       6        1      0 #>  9:       0      47        1      0 #> 10:       0       2        8      3 #> 11:       0      64        1      0 #> 12:      67       6       10      5 #> 13:       0       7       14      3 #> 14:       0      16        1      0 #> 15:       0       8        1      1 #> 16:    6064       7       23     21 #> 17:       0      57        1      1 #> 18:       0       0       61      0 #> 19:       0       0       10      1 #> 20:       0      18        1      0 #> 21:       0       7        2      1 #> 22:       0      36        1      0 #> 23:     448      14        6      0 #> 24:       0     617        1      0 #> 25:       0      10        3      1 #> 26:       0      70        1      0 #> 27:       0       0        5      1 #> 28:       0     784        1      0 #> 29:       0      37        1      1 #> 30:       0      37        1      1 #> 31:      25      21        1      1 #> 32:       0      21        1      1 #> 33:       0      21        1      1 #> 34:       0      21        1      1 #> 35:       0       7       10      4 #> 36:       0       4        1      1 #> 37:       0       4        1      1 #> 38:       0     856        1      0 #> 39:       0      51        1      0 #> 40:       0     561        1      0 #> 41:       0       9        2      2 #> 42:       0     500        1      1 #> 43:       0      89       30      3 #> 44:       0      72        1      1 #> 45:       0       5        1      1 #> 46:       0      41        1      1 #> 47:       0      24        1      0 #> 48:       0     256        1      0 #> 49:       0      30        1      1 #> 50:    6465       6        9      2 #> 51:       0    1776        1      1 #> 52:       0       0       31     23 #> 53:       0      32        1      0 #> 54:     999      18       22      4 #> 55:     835       1       12      1 #> 56:       0      21        1      1 #> 57:       0      40        1      0 #> 58:       0       0       43      0 #> 59:       0       0      181    180 #> 60:       0      16        5      3 #> 61:       0    1024        1      0 #> 62:       0    3072        1      0 #> 63:    1396      77        5      3 #> 64:       0       0        7      0 #> 65:       0       3     1556   1556 #> 66:       0     240        1      0 #> 67:       0      27        1      0 #> 68:       0       5        1      1 #> 69:       0      19        1      0 #> 70:       0      20        1      1 #> 71:       0     784        1      0 #> 72:       0       6        1      0 #>     missing numeric symbolic binary  # mlr3 conversion tasks = as_tasks(task_collection) resamplings = as_resamplings(task_collection) # }"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to OpenML Data Sets — oml_data_r6","title":"Interface to OpenML Data Sets — oml_data_r6","text":"class data sets served OpenML. object can also constructed using sugar function oml_data().","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"mlr-integration","dir":"Reference","previous_headings":"","what":"mlr3 Integration","title":"Interface to OpenML Data Sets — oml_data_r6","text":"mlr3::Task can obtained calling mlr3::as_task(). mlr3::DataBackend can obtained calling mlr3::as_data_backend(). Depending selected file-type, returned backend mlr3::DataBackendDataTable (arff) mlr3db::DataBackendDuckDB (parquet).","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"name-conversion","dir":"Reference","previous_headings":"","what":"Name conversion","title":"Interface to OpenML Data Sets — oml_data_r6","text":"Column names comply R's naming scheme renamed (see base::make.names()). means names can differ OpenML.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"file-format","dir":"Reference","previous_headings":"","what":"File Format","title":"Interface to OpenML Data Sets — oml_data_r6","text":"datasets stored OpenML either stored (sparse) ARFF parquet. creating new OMLData object, constructor argument parquet allows switch arff parquet. Note necessarily data files available parquet. option mlr3oml.parquet can used set default. parquet TRUE available, \"arff\" used fallback.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"arff-files","dir":"Reference","previous_headings":"","what":"ARFF Files","title":"Interface to OpenML Data Sets — oml_data_r6","text":"package comes reader ARFF files, based data.table::fread(). sparse ARFF files RWeka package installed, reader automatically falls back implementation (RWeka::read.arff()).","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"parquet-files","dir":"Reference","previous_headings":"","what":"Parquet Files","title":"Interface to OpenML Data Sets — oml_data_r6","text":"handling parquet files, rely duckdb CRANpkg{DBI}.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Interface to OpenML Data Sets — oml_data_r6","text":"Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014). “OpenML.” ACM SIGKDD Explorations Newsletter, 15(2), 49--60. doi:10.1145/2641190.2641198 .","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Interface to OpenML Data Sets — oml_data_r6","text":"mlr3oml::OMLObject -> OMLData","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Interface to OpenML Data Sets — oml_data_r6","text":"qualities (data.table()) Data set qualities (performance values), downloaded JSON API response converted data.table::data.table() columns \"name\" \"value\". tags (character()) Returns tags object. parquet (logical(1)) Whether use parquet. data (data.table()) Returns data (without row identifier ignore id columns). features (data.table()) Information data set features (including target), downloaded JSON API response converted data.table::data.table() columns: \"index\" (integer()): Column position. \"name\" (character()): Name feature. \"data_type\" (factor()): Type feature: \"nominal\" \"numeric\". \"nominal_value\" (list()): Levels feature, NULL numeric features. \"is_target\" (logical()): TRUE target column, FALSE otherwise. \"is_ignore\" (logical()): TRUE feature ignored. Ignored features removed automatically data set. \"is_row_identifier\" (logical()): TRUE column encodes row identifier. Row identifiers removed automatically data set. \"number_of_missing_values\" (integer()): Number missing values column. target_names (character()) Name default target, extracted OpenML data set description. feature_names (character()) Name features, extracted OpenML data set description. nrow (integer()) Number observations, extracted OpenML data set qualities. ncol (integer()) Number features (including targets), extracted table data set features. excludes row identifiers ignored columns. license (character()) Returns license dataset. parquet_path (character()) Downloads parquet file (loads cache) returns path parquet file. Note also normalizes names parquet file.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Interface to OpenML Data Sets — oml_data_r6","text":"mlr3oml::OMLObject$help()","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Interface to OpenML Data Sets — oml_data_r6","text":"OMLData$new() OMLData$print() OMLData$quality() OMLData$clone()","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Interface to OpenML Data Sets — oml_data_r6","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Data Sets — oml_data_r6","text":"","code":"OMLData$new(   id,   cache = getOption(\"mlr3oml.cache\", FALSE),   parquet = getOption(\"mlr3oml.parquet\", FALSE),   test_server = getOption(\"mlr3oml.test_server\", FALSE) )"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Data Sets — oml_data_r6","text":"id (integer(1)) OpenML id object. cache (logical(1) | character(1)) See field cache explanation possible values. Defaults value option \"mlr3oml.cache\", FALSE set. parquet (logical(1)) Whether use parquet instead arff. parquet available, fall back arff. test_server (character(1)) Whether use OpenML test server (https://test.openml.org/) public server (https://www.openml.org/). Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Interface to OpenML Data Sets — oml_data_r6","text":"Prints object. detailed printer, convert mlr3::Task via as_task().","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Data Sets — oml_data_r6","text":"","code":"OMLData$print()"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"method-quality-","dir":"Reference","previous_headings":"","what":"Method quality()","title":"Interface to OpenML Data Sets — oml_data_r6","text":"Returns value single OpenML data set quality.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Data Sets — oml_data_r6","text":"","code":"OMLData$quality(name)"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Data Sets — oml_data_r6","text":"name (character(1)) Name quality extract.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Interface to OpenML Data Sets — oml_data_r6","text":"objects class cloneable method.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Data Sets — oml_data_r6","text":"","code":"OMLData$clone(deep = FALSE)"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Data Sets — oml_data_r6","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_data_r6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to OpenML Data Sets — oml_data_r6","text":"","code":"library(\"mlr3\") # \\donttest{ # OpenML Data object odata = OMLData$new(id = 9) # using sugar odata = oml_data(id = 9) print(odata) #> <OMLData:9:autos> (205x26) #>  * Default target: symboling print(odata$target_names) #> [1] \"symboling\" print(odata$feature_names) #>  [1] \"normalized.losses\" \"make\"              \"fuel.type\"         #>  [4] \"aspiration\"        \"num.of.doors\"      \"body.style\"        #>  [7] \"drive.wheels\"      \"engine.location\"   \"wheel.base\"        #> [10] \"length\"            \"width\"             \"height\"            #> [13] \"curb.weight\"       \"engine.type\"       \"num.of.cylinders\"  #> [16] \"engine.size\"       \"fuel.system\"       \"bore\"              #> [19] \"stroke\"            \"compression.ratio\" \"horsepower\"        #> [22] \"peak.rpm\"          \"city.mpg\"          \"highway.mpg\"       #> [25] \"price\"             print(odata$tags) #> [1] \"study_1\"  \"study_41\" \"study_76\" \"uci\"       # mlr3 conversion: task = as_task(odata) backend = as_data_backend(odata) class(backend) #> [1] \"DataBackendDataTable\" \"DataBackend\"          \"R6\"                    # get a task via tsk(): tsk(\"oml\", data_id = 9) #> <TaskClassif:autos> (205 x 26) #> * Target: symboling #> * Properties: multiclass #> * Features (25): #>   - fct (10): aspiration, body.style, drive.wheels, engine.location, #>     engine.type, fuel.system, fuel.type, make, num.of.cylinders, #>     num.of.doors #>   - int (8): city.mpg, curb.weight, engine.size, highway.mpg, #>     horsepower, normalized.losses, peak.rpm, price #>   - dbl (7): bore, compression.ratio, height, length, stroke, #>     wheel.base, width  # For parquet files if (requireNamespace(\"duckdb\")) {   odata = OMLData$new(id = 9, parquet = TRUE)   # using sugar   odata = oml_data(id = 9)    print(odata)   print(odata$target_names)   print(odata$feature_names)   print(odata$tags)    backend = as_data_backend(odata)   class(backend)   task = as_task(odata)   task = tsk(\"oml\", data_id = 9, parquet = TRUE)   class(task$backend) } #> Loading required namespace: duckdb #> <OMLData:9:autos> (205x26) #>  * Default target: symboling #> [1] \"symboling\" #>  [1] \"normalized.losses\" \"make\"              \"fuel.type\"         #>  [4] \"aspiration\"        \"num.of.doors\"      \"body.style\"        #>  [7] \"drive.wheels\"      \"engine.location\"   \"wheel.base\"        #> [10] \"length\"            \"width\"             \"height\"            #> [13] \"curb.weight\"       \"engine.type\"       \"num.of.cylinders\"  #> [16] \"engine.size\"       \"fuel.system\"       \"bore\"              #> [19] \"stroke\"            \"compression.ratio\" \"horsepower\"        #> [22] \"peak.rpm\"          \"city.mpg\"          \"highway.mpg\"       #> [25] \"price\"             #> [1] \"study_1\"  \"study_41\" \"study_76\" \"uci\"      #> [1] \"DataBackendRename\" \"DataBackend\"       \"R6\"                # }"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to OpenML Flows — oml_flow_r6","title":"Interface to OpenML Flows — oml_flow_r6","text":"class flows served OpenML. Flows represent machine learning algorithms. object can also constructed using sugar function oml_flow().","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":"mlr-integration","dir":"Reference","previous_headings":"","what":"mlr3 Integration","title":"Interface to OpenML Flows — oml_flow_r6","text":"Obtain mlr3::Learner using mlr3::as_learner().","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Interface to OpenML Flows — oml_flow_r6","text":"Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014). “OpenML.” ACM SIGKDD Explorations Newsletter, 15(2), 49--60. doi:10.1145/2641190.2641198 .","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Interface to OpenML Flows — oml_flow_r6","text":"mlr3oml::OMLObject -> OMLFlow","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Interface to OpenML Flows — oml_flow_r6","text":"parameter (data.table) parameters flow. dependencies (character()) dependencies flow. tags (character()) Returns tags object.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Interface to OpenML Flows — oml_flow_r6","text":"mlr3oml::OMLObject$help()","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Interface to OpenML Flows — oml_flow_r6","text":"OMLFlow$new() OMLFlow$print() OMLFlow$clone()","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Interface to OpenML Flows — oml_flow_r6","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Flows — oml_flow_r6","text":"","code":"OMLFlow$new(   id,   cache = getOption(\"mlr3oml.cache\", FALSE),   test_server = getOption(\"mlr3oml.test_server\", FALSE) )"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Flows — oml_flow_r6","text":"id (integer(1)) OpenML id object. cache (logical(1) | character(1)) See field cache explanation possible values. Defaults value option \"mlr3oml.cache\", FALSE set. test_server (character(1)) Whether use OpenML test server (https://test.openml.org/) public server (https://www.openml.org/). Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Interface to OpenML Flows — oml_flow_r6","text":"Prints object.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Flows — oml_flow_r6","text":"","code":"OMLFlow$print()"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Interface to OpenML Flows — oml_flow_r6","text":"objects class cloneable method.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Flows — oml_flow_r6","text":"","code":"OMLFlow$clone(deep = FALSE)"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Flows — oml_flow_r6","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_flow_r6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to OpenML Flows — oml_flow_r6","text":"","code":"# \\donttest{ library(\"mlr3\") # mlr3 flow: flow = OMLFlow$new(id = 19103) # using sugar flow = oml_flow(id = 19103) learner = as_learner(flow, \"classif\") # python flow python_flow = OMLFlow$new(19090) # conversion to pseudo Learner plearner = as_learner(python_flow, \"classif\") # }"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_object_r6.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Base Class for OpenML objects. — oml_object_r6","title":"Abstract Base Class for OpenML objects. — oml_object_r6","text":"OML Objects inherit class. use class directly.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_object_r6.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Abstract Base Class for OpenML objects. — oml_object_r6","text":"desc (list()) Description OpenML object. cache_dir (logical(1) | character(1)) Stores location cache objects retrieved OpenML. set FALSE, caching disabled. Objects test server stored subdirectory 'test', public server stored subdirectory 'public'. package qs required caching. id (integer(1)) OpenML data id. server (character(1)) server object. man (character(1)) manual entry. name (character(1)) name object. type (character()) type OpenML object (e.g. task, run, ...). test_server (logical(1)) Whether object using test server.","code":""},{"path":[]},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_object_r6.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Base Class for OpenML objects. — oml_object_r6","text":"OMLObject$new() OMLObject$help() OMLObject$clone()","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_object_r6.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Base Class for OpenML objects. — oml_object_r6","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_object_r6.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Base Class for OpenML objects. — oml_object_r6","text":"","code":"OMLObject$new(   id,   cache = getOption(\"mlr3oml.cache\", FALSE),   test_server = getOption(\"mlr3oml.test_server\", FALSE),   type )"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_object_r6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Base Class for OpenML objects. — oml_object_r6","text":"id (integer(1)) OpenML id object. cache (logical(1) | character(1)) See field cache explanation possible values. Defaults value option \"mlr3oml.cache\", FALSE set. test_server (character(1)) Whether use OpenML test server (https://test.openml.org/) public server (https://www.openml.org/). Defaults value option \"mlr3oml.test_server\", FALSE set. type (charcater()) type OpenML object (e.g. run, task, ...).","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_object_r6.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Abstract Base Class for OpenML objects. — oml_object_r6","text":"Opens corresponding help page referenced field $man.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_object_r6.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Base Class for OpenML objects. — oml_object_r6","text":"","code":"OMLObject$help()"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_object_r6.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Base Class for OpenML objects. — oml_object_r6","text":"objects class cloneable method.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_object_r6.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Base Class for OpenML objects. — oml_object_r6","text":"","code":"OMLObject$clone(deep = FALSE)"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_object_r6.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Base Class for OpenML objects. — oml_object_r6","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to OpenML Runs — oml_run_r6","title":"Interface to OpenML Runs — oml_run_r6","text":"class OpenML Runs, conceptually similar mlr3::ResampleResults. object can also constructed using sugar function oml_run().","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"openml-integration","dir":"Reference","previous_headings":"","what":"OpenML Integration","title":"Interface to OpenML Runs — oml_run_r6","text":"OMLTask returned accessing active field $task. OMLData returned accessing active field $data (short $task$data) OMLFlow returned accessing active field $flow. raw predictions returned accessing active field $prediction.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"mlr-integration","dir":"Reference","previous_headings":"","what":"mlr3 Integration","title":"Interface to OpenML Runs — oml_run_r6","text":"mlr3::ResampleResult returned calling mlr3::as_resample_result(). mlr3::Task returned calling mlr3::as_task(). mlr3::DataBackend returned calling mlr3::as_data_backend(). instantiated mlr3::Resampling returned calling mlr3::as_resampling().","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Interface to OpenML Runs — oml_run_r6","text":"Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014). “OpenML.” ACM SIGKDD Explorations Newsletter, 15(2), 49--60. doi:10.1145/2641190.2641198 .","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Interface to OpenML Runs — oml_run_r6","text":"mlr3oml::OMLObject -> OMLRun","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Interface to OpenML Runs — oml_run_r6","text":"flow_id (integer(1)) id flow. flow (OMLFlow) OpenML Flow. tags (character()) Returns tags object. parquet (logical(1)) Whether use parquet. task_id (character(1)) id task solved run. task (OMLTask) task solved run. data_id (integer(1)) id dataset. data (OMLData)  data used run. task_type (character()) task type. parameter_setting data.table()) parameter setting run. prediction (data.table()) raw predictions run returned OpenML, standard mlr3 format. Formatted predictions accessible converting mlr3::ResampleResult via as_resample_result(). evaluation (data.table()) evaluations calculated OpenML server.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Interface to OpenML Runs — oml_run_r6","text":"mlr3oml::OMLObject$help()","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Interface to OpenML Runs — oml_run_r6","text":"OMLRun$new() OMLRun$print() OMLRun$clone()","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Interface to OpenML Runs — oml_run_r6","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Runs — oml_run_r6","text":"","code":"OMLRun$new(   id,   cache = getOption(\"mlr3oml.cache\", FALSE),   parquet = getOption(\"mlr3oml.parquet\", FALSE),   test_server = getOption(\"mlr3oml.test_server\", FALSE) )"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Runs — oml_run_r6","text":"id (integer(1)) OpenML id object. cache (logical(1) | character(1)) See field cache explanation possible values. Defaults value option \"mlr3oml.cache\", FALSE set. parquet (logical(1)) Whether use parquet instead arff. parquet available, fall back arff. test_server (character(1)) Whether use OpenML test server (https://test.openml.org/) public server (https://www.openml.org/). Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Interface to OpenML Runs — oml_run_r6","text":"Prints object.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Runs — oml_run_r6","text":"","code":"OMLRun$print()"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Interface to OpenML Runs — oml_run_r6","text":"objects class cloneable method.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Runs — oml_run_r6","text":"","code":"OMLRun$clone(deep = FALSE)"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Runs — oml_run_r6","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_run_r6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to OpenML Runs — oml_run_r6","text":"","code":"# \\donttest{ library(\"mlr3\") orun = OMLRun$new(id = 10587724) # sugar orun = oml_run(id = 10587724) print(orun) #> <OMLRun:10587724> #>  * Task: credit-g (id: 31) #>  * Flow: mlr3.classif.rpart (id: 19068) #>  * Estimation: crossvalidation (id: 1; repeats: 1, folds: 10) print(orun$task) # OMLTask #> <OMLTask:31> #>  * Type: Supervised Classification #>  * Data: credit-g (id: 31; dim: 1000x21) #>  * Target: class #>  * Estimation: crossvalidation (id: 1; repeats: 1, folds: 10) print(orun$data) # OMLData #> <OMLData:31:credit-g> (1000x21) #>  * Default target: class print(orun$flow) # OMLFlow #> <OMLFlow:19068> #>  * Name: mlr3.classif.rpart #>  * Dependencies: mlr3_0.13.1-9000, rpart_4.1-15 print(orun$prediction) #>       repeat. fold row_id prediction truth confidence.good confidence.bad #>    1:       0    0    490       good  good       0.8644068      0.1355932 #>    2:       0    0    406       good  good       0.8644068      0.1355932 #>    3:       0    0    139       good  good       0.8644068      0.1355932 #>    4:       0    0    482        bad  good       0.3846154      0.6153846 #>    5:       0    0    178       good  good       0.8644068      0.1355932 #>   ---                                                                     #>  996:       0    9    320        bad   bad       0.3333333      0.6666667 #>  997:       0    9    503       good   bad       0.6954733      0.3045267 #>  998:       0    9    822        bad   bad       0.2435897      0.7564103 #>  999:       0    9    558       good   bad       0.6954733      0.3045267 #> 1000:       0    9    714        bad   bad       0.2435897      0.7564103 as_task(orun) #> <TaskClassif:credit-g> (1000 x 21) #> * Target: class #> * Properties: twoclass #> * Features (20): #>   - fct (13): checking_status, credit_history, employment, #>     foreign_worker, housing, job, other_parties, other_payment_plans, #>     own_telephone, personal_status, property_magnitude, purpose, #>     savings_status #>   - int (7): age, credit_amount, duration, existing_credits, #>     installment_commitment, num_dependents, residence_since as_resampling(orun) #> <ResamplingCustom>: Custom Splits #> * Iterations: 10 #> * Instantiated: TRUE #> * Parameters: list() as_data_backend(orun) #> <DataBackendDataTable> (1000x22) #>  checking_status duration                 credit_history             purpose #>               <0        6 critical/other existing credit            radio/tv #>         0<=X<200       48                  existing paid            radio/tv #>      no checking       12 critical/other existing credit           education #>               <0       42                  existing paid furniture/equipment #>               <0       24             delayed previously             new car #>      no checking       36                  existing paid           education #>  credit_amount   savings_status employment installment_commitment #>           1169 no known savings        >=7                      4 #>           5951             <100     1<=X<4                      2 #>           2096             <100     4<=X<7                      2 #>           7882             <100     4<=X<7                      2 #>           4870             <100     1<=X<4                      3 #>           9055 no known savings     1<=X<4                      2 #>     personal_status other_parties residence_since property_magnitude age #>         male single          none               4        real estate  67 #>  female div/dep/mar          none               2        real estate  22 #>         male single          none               3        real estate  49 #>         male single     guarantor               4     life insurance  45 #>         male single          none               4  no known property  53 #>         male single          none               4  no known property  35 #>  other_payment_plans  housing existing_credits                job #>                 none      own                2            skilled #>                 none      own                1            skilled #>                 none      own                1 unskilled resident #>                 none for free                1            skilled #>                 none for free                2            skilled #>                 none for free                1 unskilled resident #>  num_dependents own_telephone foreign_worker class ..row_id #>               1           yes            yes  good        1 #>               1          none            yes   bad        2 #>               2          none            yes  good        3 #>               2          none            yes  good        4 #>               2          none            yes   bad        5 #>               2           yes            yes  good        6 #> [...] (994 rows omitted) rr = as_resample_result(orun) rr$score(msr(\"classif.ce\")) #>                  task  task_id                      learner learner_id #>  1: <TaskClassif[50]> credit-g <LearnerClassifOML19068[36]>  oml.19068 #>  2: <TaskClassif[50]> credit-g <LearnerClassifOML19068[36]>  oml.19068 #>  3: <TaskClassif[50]> credit-g <LearnerClassifOML19068[36]>  oml.19068 #>  4: <TaskClassif[50]> credit-g <LearnerClassifOML19068[36]>  oml.19068 #>  5: <TaskClassif[50]> credit-g <LearnerClassifOML19068[36]>  oml.19068 #>  6: <TaskClassif[50]> credit-g <LearnerClassifOML19068[36]>  oml.19068 #>  7: <TaskClassif[50]> credit-g <LearnerClassifOML19068[36]>  oml.19068 #>  8: <TaskClassif[50]> credit-g <LearnerClassifOML19068[36]>  oml.19068 #>  9: <TaskClassif[50]> credit-g <LearnerClassifOML19068[36]>  oml.19068 #> 10: <TaskClassif[50]> credit-g <LearnerClassifOML19068[36]>  oml.19068 #>                 resampling resampling_id iteration              prediction #>  1: <ResamplingCustom[20]>        custom         1 <PredictionClassif[20]> #>  2: <ResamplingCustom[20]>        custom         2 <PredictionClassif[20]> #>  3: <ResamplingCustom[20]>        custom         3 <PredictionClassif[20]> #>  4: <ResamplingCustom[20]>        custom         4 <PredictionClassif[20]> #>  5: <ResamplingCustom[20]>        custom         5 <PredictionClassif[20]> #>  6: <ResamplingCustom[20]>        custom         6 <PredictionClassif[20]> #>  7: <ResamplingCustom[20]>        custom         7 <PredictionClassif[20]> #>  8: <ResamplingCustom[20]>        custom         8 <PredictionClassif[20]> #>  9: <ResamplingCustom[20]>        custom         9 <PredictionClassif[20]> #> 10: <ResamplingCustom[20]>        custom        10 <PredictionClassif[20]> #>     classif.ce #>  1:  0.2000000 #>  2:  0.3200000 #>  3:  0.2500000 #>  4:  0.2525253 #>  5:  0.2900000 #>  6:  0.3100000 #>  7:  0.2800000 #>  8:  0.2100000 #>  9:  0.2500000 #> 10:  0.2100000 # }"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_sugar.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar for Object Construction — oml_sugar","title":"Syntactic Sugar for Object Construction — oml_sugar","text":"Functions create OpenML objects. following functions available: oml_data() - creates instance R6 class OMLData. oml_task() - creates instance R6 class OMLTask. oml_flow() - creates instance R6 class OMLFlow. oml_run() - creates instance R6 class OMLRun. oml_collection() - creates instance R6 class OMLCollection.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_sugar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar for Object Construction — oml_sugar","text":"","code":"oml_data(   id,   cache = getOption(\"mlr3oml.cache\", FALSE),   parquet = getOption(\"mlr3oml.parquet\", FALSE),   test_server = getOption(\"mlr3oml.test_server\", FALSE) )  oml_task(   id,   cache = getOption(\"mlr3oml.cache\", FALSE),   parquet = getOption(\"mlr3oml.parquet\", FALSE),   test_server = getOption(\"mlr3oml.test_server\", FALSE) )  oml_flow(   id,   cache = getOption(\"mlr3oml.cache\", FALSE),   test_server = getOption(\"mlr3oml.test_server\", FALSE) )  oml_run(   id,   cache = getOption(\"mlr3oml.cache\", FALSE),   parquet = getOption(\"mlr3oml.parquet\", FALSE),   test_server = getOption(\"mlr3oml.test_server\", FALSE) )  oml_collection(   id,   cache = getOption(\"mlr3oml.cache\", FALSE),   parquet = getOption(\"mlr3oml.parquet\", FALSE),   test_server = getOption(\"mlr3oml.test_server\", FALSE) )"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_sugar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar for Object Construction — oml_sugar","text":"id (integer(1)) OpenML id object. cache (logical(1) | character(1)) See field cache explanation possible values. Defaults value option \"mlr3oml.cache\", FALSE set. parquet (logical(1)) Whether use parquet instead arff. parquet available, fall back arff. test_server (character(1)) Whether use OpenML test server (https://test.openml.org/) public server (https://www.openml.org/). Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to OpenML Tasks — oml_task_r6","title":"Interface to OpenML Tasks — oml_task_r6","text":"class tasks served OpenML. consists dataset meta-information target variable supervised problems. object can also constructed using sugar function oml_task().","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":"mlr-integration","dir":"Reference","previous_headings":"","what":"mlr3 Integration","title":"Interface to OpenML Tasks — oml_task_r6","text":"Obtain mlr3::Task calling as_task(). Obtain mlr3::Resampling calling as_resampling().","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Interface to OpenML Tasks — oml_task_r6","text":"Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014). “OpenML.” ACM SIGKDD Explorations Newsletter, 15(2), 49--60. doi:10.1145/2641190.2641198 .","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Interface to OpenML Tasks — oml_task_r6","text":"mlr3oml::OMLObject -> OMLTask","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Interface to OpenML Tasks — oml_task_r6","text":"estimation_procedure (list()) estimation procedure, returns NULL none available. task_splits (data.table()) data.table containing splits provided OpenML. tags (character()) Returns tags object. parquet (logical(1)) Whether use parquet. name (character(1)) Name task, extracted task description. task_type (character(1)) OpenML task type. data_id (integer()) Data id, extracted task description. data (OMLData) Access underlying OpenML data set via OMLData object. nrow (integer()) Number rows, extracted OMLData object. ncol (integer()) Number columns, extracted OMLData object. target_names (character()) Name targets, extracted OpenML task description. feature_names (character()) Name features (without targets OMLTask). data_name (character()) Name dataset (inferred task name).","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Interface to OpenML Tasks — oml_task_r6","text":"mlr3oml::OMLObject$help()","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Interface to OpenML Tasks — oml_task_r6","text":"OMLTask$new() OMLTask$print() OMLTask$clone()","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Interface to OpenML Tasks — oml_task_r6","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Tasks — oml_task_r6","text":"","code":"OMLTask$new(   id,   cache = getOption(\"mlr3oml.cache\", FALSE),   parquet = getOption(\"mlr3oml.parquet\", FALSE),   test_server = getOption(\"mlr3oml.test_server\", FALSE) )"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Tasks — oml_task_r6","text":"id (integer(1)) OpenML id object. cache (logical(1) | character(1)) See field cache explanation possible values. Defaults value option \"mlr3oml.cache\", FALSE set. parquet (logical(1)) Whether use parquet instead arff. parquet available, fall back arff. test_server (character(1)) Whether use OpenML test server (https://test.openml.org/) public server (https://www.openml.org/). Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Interface to OpenML Tasks — oml_task_r6","text":"Prints object. detailed printer, convert mlr3::Task via $task.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Tasks — oml_task_r6","text":"","code":"OMLTask$print()"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Interface to OpenML Tasks — oml_task_r6","text":"objects class cloneable method.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Tasks — oml_task_r6","text":"","code":"OMLTask$clone(deep = FALSE)"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Tasks — oml_task_r6","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/oml_task_r6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to OpenML Tasks — oml_task_r6","text":"","code":"library(\"mlr3\") # \\donttest{ # Get a task from OpenML: otask = OMLTask$new(id = 31) # using sugar otask = oml_task(id = 31) otask$data #> <OMLData:31:credit-g> (1000x21) #>  * Default target: class otask$target_names #> [1] \"class\" otask$feature_names #>  [1] \"checking_status\"        \"duration\"               \"credit_history\"         #>  [4] \"purpose\"                \"credit_amount\"          \"savings_status\"         #>  [7] \"employment\"             \"installment_commitment\" \"personal_status\"        #> [10] \"other_parties\"          \"residence_since\"        \"property_magnitude\"     #> [13] \"age\"                    \"other_payment_plans\"    \"housing\"                #> [16] \"existing_credits\"       \"job\"                    \"num_dependents\"         #> [19] \"own_telephone\"          \"foreign_worker\"          # convert to mlr3 Task: task = as_task(otask)  # get a task via tsk(): tsk(\"oml\", task_id = 31L) #> <TaskClassif:credit-g> (1000 x 21) #> * Target: class #> * Properties: twoclass #> * Features (20): #>   - fct (13): checking_status, credit_history, employment, #>     foreign_worker, housing, job, other_parties, other_payment_plans, #>     own_telephone, personal_status, property_magnitude, purpose, #>     savings_status #>   - int (7): age, credit_amount, duration, existing_credits, #>     installment_commitment, num_dependents, residence_since # }"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/read_arff.html","id":null,"dir":"Reference","previous_headings":"","what":"Read ARFF files — read_arff","title":"Read ARFF files — read_arff","text":"Parses file located path returns data.table(). Limitations: works dense files, support sparse data. Use RWeka instead. Dates (even time component) read POSIXct. date-format ARFF specification currently ignored. Instead, rely auto-detection data.table's fread()..","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/read_arff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read ARFF files — read_arff","text":"","code":"read_arff(path)"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/read_arff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read ARFF files — read_arff","text":"path (character(1)) Path URI ARFF file, passed file().","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/read_arff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read ARFF files — read_arff","text":"(data.table()).","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/write_arff.html","id":null,"dir":"Reference","previous_headings":"","what":"Write ARFF files — write_arff","title":"Write ARFF files — write_arff","text":"Writes data.frame() ARFF file. Limitations: Logicals written categorical features. POSIXct columns converted UTC.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/reference/write_arff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write ARFF files — write_arff","text":"","code":"write_arff(data, path, relation = deparse(substitute(data)))"},{"path":"https://mlr3oml.mlr-org.com/dev/reference/write_arff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write ARFF files — write_arff","text":"data (data.frame()) Data write. path (character(1)) Path URI ARFF file, passed file(). relation (character(1)) Relation (name) data set.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/news/index.html","id":"mlr3oml-060","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.6.0","title":"mlr3oml 0.6.0","text":"Add R6 classes OMLCollection, OMLRun, OMLFlow. Add sugar functions oml_flow, oml_data, oml_task, oml_run, oml_collection OpenML objects. Conversion OpenML mlr3 objects now possible usual s3 converters as_xxx. improves consistency ensuring subcomponents OpenML objects always OpenML objects suddenly mlr3 objects. Added converter functions: as_learner, as_resample_result, as_data_backend, as_benchmark_result. Added support parquet files recently introduced OpenML. global option mlr3oml.parquet can used enable disable . Implement arff writer remove arff dependency, therefore also removing option \"farff\" mlr3oml.arff_parser Increment cache version number due changes cache structure: flush previous cache folder. Support use OpenML test server. can globally enabled using option mlr3oml.test_server. Options globally define api key test server via environment variable TESTOPENMLAPIKEY option mlr3oml.test_api_key Bugfix: OpenML tasks can now also filtered according task type","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/news/index.html","id":"mlr3oml-050","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.5.0","title":"mlr3oml 0.5.0","text":"CRAN release: 2021-09-24 Support downloading survival tasks (via mlr3proba). list_oml_evaluations() list_oml_flows() list_oml_measures() list_oml_runs() list_oml_setups()","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/news/index.html","id":"mlr3oml-043","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.4.3","title":"mlr3oml 0.4.3","text":"CRAN release: 2021-04-16 Fixed bug regarding unquoting fields ARFF files.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/news/index.html","id":"mlr3oml-042","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.4.2","title":"mlr3oml 0.4.2","text":"CRAN release: 2021-02-22 set via option mlr3oml.api_key, API key retrieved environment variable OPENMLAPIKEY. Implemented retry mechanism workaround temporary connection errors.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/news/index.html","id":"mlr3oml-041","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.4.1","title":"mlr3oml 0.4.1","text":"CRAN release: 2021-01-27 Added heuristic detect quote char.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/news/index.html","id":"mlr3oml-040","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.4.0","title":"mlr3oml 0.4.0","text":"CRAN release: 2020-10-20 parsers ARFF files can now explicitly selected via option \"mlr3oml.arff.parser\". Default internal parser based data.table::fread(). Improved stability internal ARFF parser case malformed ARFF files non-standardized quotes.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/news/index.html","id":"mlr3oml-030","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.3.0","title":"mlr3oml 0.3.0","text":"CRAN release: 2020-10-05 connectors used mlr_tasks mlr_resamplings now signal errors class missingDefaultError defaults set. Target columns now automatically converted require storage mode task creation. Removed dependency orphaned package bibtex.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/news/index.html","id":"mlr3oml-020","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.2.0","title":"mlr3oml 0.2.0","text":"CRAN release: 2020-08-24 Support filtering data sets tasks via data id task id (#5). Added fallback RWeka sparse ARFF files (#6). Fixed import backports.","code":""},{"path":"https://mlr3oml.mlr-org.com/dev/news/index.html","id":"mlr3oml-010","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.1.0","title":"mlr3oml 0.1.0","text":"CRAN release: 2020-08-07 Initial release.","code":""}]
